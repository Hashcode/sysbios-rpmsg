#!/bin/bash
#
# Copyright (c) 2011, Texas Instruments Incorporated
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# *  Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# *  Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# *  Neither the name of Texas Instruments Incorporated nor the names of
#    its contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

if [[ $# == 3 ]]
then
    corefile0=$1
    corefile1=$2
    outfile=$3
    shift 3
else
  if [[ $# == 2 ]]
  then
    corefile0=$1
    outfile=$2
    shift 2
  else
    echo Usage: $0 core0 [core1] out >&2
    exit 1
  fi
fi

dir=`dirname $0`
tmp=/tmp/singlebin-$$
if [[ ! -f $dir/version.txt ]]
then
	echo no $dir/version.txt file
	exit 1
fi

version=`cat $dir/version.txt`
echo header version $version

echo -n RPRC > $outfile
$dir/wrints $version 1012 >> $outfile

cd $dir
rpmsgversion=$(git describe --dirty --tags)
cd $OLDPWD

if [[ -f $corefile0 ]]
then
	md5sum $corefile0 >> $outfile
	stat -c "%s %z" $corefile0 >> $outfile
	nm $corefile0 | grep SysMin_Module_State_0_outbuf__A | cut -d ' ' -f 1 >> $outfile
	cd $(dirname $corefile0)
	core0version=$(git describe --dirty --tags)
	cd $OLDPWD
fi

if [[ -f $corefile1 ]]
then
	md5sum $corefile1 >> $outfile
	stat -c "%s %z" $corefile1 >> $outfile
	nm $corefile1 | grep SysMin_Module_State_0_outbuf__A | cut -d ' ' -f 1 >> $outfile
	cd $(dirname $corefile1)
	core1version=$(git describe --dirty --tags)
	cd $OLDPWD
fi

echo version: >> $outfile
echo rpmsg: $rpmsgversion >> $outfile
if [[ -f $corefile0 ]]
then
	echo core0: $core0version >> $outfile
	$dir/xdep $(readlink -f $corefile0) >> $outfile
fi
if [[ -f $corefile1 ]]
then
	echo core1: $core1version >> $outfile
	$dir/xdep $(readlink -f $corefile1) >> $outfile
fi

(( numbytesneeded = 1024 - $(stat -c "%s" $outfile) ))
dd if=/dev/zero of=$tmp bs=$numbytesneeded count=1 > /dev/null 2>&1
cat $tmp >> $outfile
rm $tmp
